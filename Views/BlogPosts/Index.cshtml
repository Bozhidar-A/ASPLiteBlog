@model IEnumerable<ASPLiteBlog.Models.BlogPost>

@using Microsoft.AspNetCore.Identity
@using ASPLiteBlog.Data
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@functions{
    public string GetProperAuthorName()
    {
        var appUser = UserManager.FindByNameAsync(User.Identity?.Name!).GetAwaiter().GetResult();
        //this is very bad and very scuffed, but it works

        if (appUser.displayUsername)
        {
            return appUser.UserName;
        }

        return $"{appUser.firstName} {appUser.lastName}";
    }
}


<head>
  <link rel="stylesheet" href="~/css/site.css">
</head>

<h1>Index</h1>

@if (User.IsInRole("admin") || User.IsInRole("writer"))
{
     <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table>
    <tbody>
@foreach (var item in Model) {
                <tr onclick="location.href = '@Url.Action("Details", "BlogPosts", new {ID = item.ID})'" class="MouseClickIcon">
                    <td>
                        <img class="IMG300X300" src="~/@item.previewPicLocation" />
                    </td>
                    <td class="">
                        <div class="FLEXCOLUM">
                            <b>@Html.DisplayFor(modelItem => item.title)</b>
                            @GetProperAuthorName()
                        </div>
                
                    </td>
                </tr>
            @if(User.IsInRole("admin") || User.IsInRole("writer"))
            {
                <td style="vertical-align: middle;">
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            }
}
    </tbody>
</table>
